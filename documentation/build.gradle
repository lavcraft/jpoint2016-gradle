buildscript {
  repositories { jcenter() }
  dependencies {
    classpath 'org.asciidoctor:asciidoctorj:1.5.4'
  }
}

plugins {
  id 'org.asciidoctor.convert' version '1.5.3'
}

configurations {
  docs
}

apply plugin: 'org.asciidoctor.convert'

asciidoctorj {
  version = '1.5.4'
  groovyDslVersion = '1.0.0.Alpha1'
}

asciidoctor {
//  dependsOn 'prepare' //TODO #5 а если убрать не работает. Царь то не настоящий!
  sourceDir project.projectDir

  sources {
    setIncludes fileTree(dir: projectDir, include: '**/*.adoc').collect { relativePath(it) }
  }

  inputs.files configurations.docs.incoming.collect { it.files } //TODO #6 делаем правильно

  outputDir = new File("$buildDir/docs")
  attributes(['source-highlighter': 'coderay',
              doctype             : 'book',
              toc                 : 'left',
              idprefix            : '',
              idseparator         : '-'])

  afterEvaluate {
    org.asciidoctor.extension.DependencyIncludeProcessor.project = project
  }
}

dependencies {
  asciidoctor 'org.asciidoctor:asciidoctorj:1.5.4'
  docs project(path: ':service', configuration: 'documentationConfiguration') //TODO #1 add deps
  docs 'gradle-advanced:service-with-deps:unspecified' //TODO #1 add deps
}

task copyDist(type: Copy) {
  into "$buildDir/docsArchive"
  from configurations.docs
}

task prepare(type: Copy) {
  dependsOn copyDist
  into "$buildDir/docsDependencies/"
  configurations.docs.files.each { archive ->
    into(archive.name) {
      from zipTree(archive)
    }
  }
}

task dist(type: Tar) {
  dependsOn 'asciidoctor'
  compression 'gzip'
  from file(asciidoctor.outputDir)
}

configurations { //TODO #2 add configuration to all projects
  documentationConfiguration
}

artifacts {
  documentationConfiguration dist
}
